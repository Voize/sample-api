name: Test Build and Push Image CI

on:
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
  
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}


jobs:

  build:

    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
      
    steps:
    - uses: actions/checkout@v4
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - run: echo "üí° The ${{ github.repository }}  repository has been cloned to the runner."
    - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner for  ${{ github.actor }}."
    - name: List files in the repository
      run: |
        ls ${{ github.workspace }}
    - run: echo "üçè This job's status is ${{ job.status }}." 


    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}        
    - name: Call a Bash Script
      run:  bash ${GITHUB_WORKSPACE}/run-unit-tests.sh
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ghcr.io/${{ github.repository_owner }}/sampleai
        tags: |
          type=raw,value=1.0.${{ github.run_number }},priority=1000
          type=ref,event=branch
          type=sha
          type=raw,value=latest


    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}